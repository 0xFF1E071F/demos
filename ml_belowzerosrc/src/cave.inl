static const char vsh_cave[] = \
	"uniform vec4 fpar;"
    "uniform vec2 camera;"
	"void main(void)"
	"{"
	"gl_Position=gl_ModelViewProjectionMatrix* gl_Vertex;"
	"}";



const char shader1frag[] = ""
	"uniform vec2 resolution;"
	"uniform float time;"
	"float n(vec3 v)"
	"{"
//	"float r=cos(v.g+time)+sin(v.b+time*2.)+sin(v.g*20.)*.05,s=sin(v.g*.2);"
    "float r=sin(v.g*20.)*.05,s=sin(v.g*.2);"
	"return r+s;"
	"}"
	"float v(vec3 v)"
	"{"
	"float r=(sin(v.r)+v.g*.15)*.15;"
	"v=vec3(cos(r)*v.r-sin(r)-v.g,sin(r)*v.r+cos(r)*v.r,v.b);"
	"return dot(cos(v)*cos(v),vec3(1))-1.2;"
	"}"
	"float s(vec3 r)"
	"{"
	"float s=n(r),e=v(r);"
	"return max(s,e);"
	"}"
	"vec3 t(vec3 r)"
	"{"
	"vec3 v=vec3(.01,0,0);"
	"return normalize(vec3(s(r+v.rgg),s(r+v.grg),s(r+v.ggr)));"
	"}"
	"void main()"
	"{"
	"vec2 v=-1.+2.*gl_FragCoord.rg/resolution.rg;"
	"v.r*=resolution.r/resolution.g;"
	"vec4 r=vec4(1.9);"
	"vec3 e=vec3(sin(time),abs(sin(time)*2.0),time*5.0),g=normalize(vec3(v.r*1.6,v.g,1.)),f=e,n;"
	"float m=0.;"
	"for(int u=0;u<32;u++)"
	"m=s(f),f+=m*g;"
	"n=f;"
	"float c=length(f-e)*.02;"
	"g=reflect(g,t(f));"
	"f+=g;"
	"for(int u=0;u<4;u++)"
	"m=s(f),f+=m*g;"
	"r=max(dot(t(f),vec3(.1,.1,0.)),0.)+vec4(.1,.2,.2,1.)*min(length(f-e)*.02,1.);"
	//"vec4 u=(r+vec4(c))*vec4(.3,.45,1.,1.);"
	"vec4 u=(r+vec4(c))*vec4(0.30,0.68,1.,1.);"
	//"vec4 u=(n+vec4(c))*vec4(0.30,0.68,1.,1.);"
	"gl_FragColor=vec4(u.rgb,1.);"
	"}";


const char shader2frag[] = ""
	"uniform vec2 resolution;"
	"uniform float time;"
	"float n(vec3 v)"
	"{"
	"float n=cos(v.g+time)+sin(v.b+time)+sin(v.g*20.)*.05,s=sin(v.g*.2);"
	"return n;"
	"}"
	"float v(vec3 v)"
	"{"
	"float n=(sin(v.r)+v.g*.15)*.15;"
	"v=vec3(cos(n)*v.r-sin(n)-v.g,sin(n)*v.r+cos(n)*v.r,v.b);"
	"return dot(cos(v)*cos(v),vec3(1))-1.2;"
	"}"
	"float s(vec3 s)"
	"{"
	"float t=n(s),e=v(s);"
	"return max(t,e);"
	"}"
	"vec3 t(vec3 v)"
	"{"
	"vec3 n=vec3(.01,0,0);"
	"return normalize(vec3(s(v+n.rgg),s(v+n.grg),s(v+n.ggr)));"
	"}"
	"void main()"
	"{"
	"vec2 v=-1.+2.*gl_FragCoord.rg/resolution.rg;"
	"v.r*=resolution.r/resolution.g;"
	"vec4 n=vec4(1.9);"
	"vec3 r=vec3(.1,2.5,time*5.0),g=normalize(vec3(v.r*1.6,v.g,1.)),e=r,f;"
	"float m=0.;"
	"for(int u=0;u<32;u++)"
	"m=s(e),e+=m*g;"
	"f=e;"
	"float c=length(e-r)*.02;"
	"g=reflect(g,t(e));"
	"e+=g;"
	"for(int u=0;u<4;u++)"
	"m=s(e),e+=m*g;"
	"n=max(dot(t(e),vec3(.1,.1,0.)),0.)+vec4(.1,.2,.2,1.)*min(length(e-r)*.02,1.);"
	//"vec4 u=(n+vec4(c))*vec4(1.,.8,.7,1.);"
	"vec4 u=(n+vec4(c))*vec4(0.30,0.68,1.,1.);"
	"gl_FragColor=vec4(u.rgb,1.);"
	"}";

static const char shader3frag[] = \
	"uniform vec4 fpar;"
	"uniform vec2 camera;"
	"float oa(vec3 q)"
	"{"
	"float a=cos(q.y*1.5)+sin(q.z)+sin(q.y*10.0)*.05,b=sin(q.y*.2);"
	"return a+b;"
	"}"
	"float ob(vec3 o)"
	"{"
	"float a=(sin(o.x)+o.y*.15)*.15;"
	"o=vec3(cos(a)*o.x-sin(a)-o.y,sin(a)*o.x+cos(a)*o.x,o.z);"
	"return dot(cos(o)*cos(o),vec3(1))-1.2;"
	"}"
	"float o(vec3 q)"
	"{"
	"float d1=oa(q),d2=ob(q);"
	"return max(d1,d2);"
	"}"
	"vec3 gn(vec3 q)"
	"{"
	"vec3 f=vec3(.01,0,0);"
	"return normalize(vec3(o(q+f.xyy),o(q+f.yxy),o(q+f.yyx)));"
	"}"
	"void main()"
	"{"
	"vec2 p=-1.+2.*gl_FragCoord.xy/fpar.yz;"
	"p.x*=fpar.y/fpar.z;"
	"vec4 c=vec4(0.),e=vec4(0.);"
	"vec3 org=vec3(camera.x,camera.y,fpar.x*5.0),dir=normalize(vec3(p.x*1.6,p.y,1.)),q=org,pp;"
	"float d=0.;"
	"const float maxd=32.;"
	"for(int i=0;i<32;i++)"
	"d=o(q),q+=d*dir;"
	"pp=q;"
	"float f=length(q-org)*.02;"
	"dir=reflect(dir,gn(q));"
	"q+=dir;"
	"for(int i=0;i<32;i++)"
	"d=o(q),q+=d*dir;"
	"c=max(dot(gn(q),vec3(.1,.1,0.)),0.)+vec4(.1,.2,.2,1.)*min(length(q-org)*.02,1.);"
//	"vec4 fcolor=(c+vec4(f))*vec4(1.,.8,.7,1.);"
//	"vec4 fcolor=(c+vec4(f))*vec4(0.30,0.34,1.,1.);"
    "vec4 fcolor=(c+vec4(f))*vec4(0.30,0.68,1.,1.);"
	"gl_FragColor=vec4(fcolor.xyz,1.);"
	"}";


const char shader4frag[] = ""
	"uniform vec2 resolution;"
	"uniform float time;"
	"float n(vec3 v)"
	"{"
	"float r=cos(v.g*20.)*.05,s=fract(v.g*.2);"
	"return r+s;"
	"}"
	"float v(vec3 v)"
	"{"
	"float r=(sin(v.r)+v.g*.15)*.15;"
	"v=vec3(cos(r)*v.r-sin(r)-v.g,sin(r)*v.r+cos(r)*v.r,v.b);"
	"return dot(cos(v)*cos(v),vec3(1))-1.2;"
	"}"
	"float s(vec3 r)"
	"{"
	"float s=n(r),t=v(r);"
	"return max(s,t);"
	"}"
	"vec3 t(vec3 r)"
	"{"
	"vec3 v=vec3(.01,0,0);"
	"return normalize(vec3(s(r+v.rgg),s(r+v.grg),s(r+v.ggr)));"
	"}"
	"void main()"
	"{"
	"vec2 v=-1.+2.*gl_FragCoord.rg/resolution.rg;"
	"v.r*=resolution.r/resolution.g;"
	"vec4 r=vec4(1.9);"
	"vec3 n=vec3(sin(time)+2.,1.,time*5.),g=normalize(vec3(v.r*1.6,v.g,1.)),f=n,e;"
	"float m=0.;"
	"for(int u=0;u<32;u++)"
	"m=s(f),f+=m*g;"
	"e=f;"
	"float c=length(f-n)*.02;"
	"g=reflect(g,t(f));"
	"f+=g;"
	"for(int u=0;u<4;u++)"
	"m=s(f),f+=m*g;"
	"r=max(dot(t(f),vec3(.1,.1,0.)),0.)+vec4(.1,.2,.2,1.)*min(length(f-n)*.02,1.);"
	//"vec4 u=(r+vec4(c))*vec4(.3,.45,1.,1.);"
	"vec4 u=(r+vec4(c))*vec4(0.30,0.68,1.,1.);"
	"gl_FragColor=vec4(u.rgb,1.);"
	"}";

const char shader5frag[] = ""
	"uniform vec2 resolution;"
	"uniform float time;"
	"float n(vec3 v)"
	"{"
	"float n=cos(v.g*20.)*.05,s=fract(v.g*.2);"
	"return n;"
	"}"
	"float v(vec3 v)"
	"{"
	"float n=(sin(v.r)+v.g*.15)*.15;"
	"v=vec3(cos(n)*v.r-sin(n)-v.g,sin(n)*v.r+cos(n)*v.r,v.b);"
	"return dot(cos(v)*cos(v),vec3(1))-1.2;"
	"}"
	"float s(vec3 s)"
	"{"
	"float t=n(s),r=v(s);"
	"return max(t,r);"
	"}"
	"vec3 t(vec3 v)"
	"{"
	"vec3 n=vec3(.01,0,0);"
	"return normalize(vec3(s(v+n.rgg),s(v+n.grg),s(v+n.ggr)));"
	"}"
	"void main()"
	"{"
	"vec2 v=-1.+2.*gl_FragCoord.rg/resolution.rg;"
	"v.r*=resolution.r/resolution.g;"
	"vec4 n=vec4(1.9);"
	"vec3 r=vec3(.6,.5,time*2.),g=normalize(vec3(v.r*1.6,v.g,1.)),f=r,e;"
	"float m=0.;"
	"for(int u=0;u<32;u++)"
	"m=s(f),f+=m*g;"
	"e=f;"
	"float c=length(f-r)*.02;"
	"g=reflect(g,t(f));"
	"f+=g;"
	"for(int u=0;u<4;u++)"
	"m=s(f),f+=m*g;"
	"n=max(dot(t(f),vec3(.1,.1,0.)),0.)+vec4(.1,.2,.2,1.)*min(length(f-r)*.02,1.);"
	"vec4 u=(n+vec4(c))*vec4(.3,.45,1.,1.);"
	"gl_FragColor=vec4(u.rgb,1.);"
	"}";



