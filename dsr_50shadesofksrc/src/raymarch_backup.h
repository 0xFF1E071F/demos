GLuint raymarch_shader_program[5],raymarch_vao, raymarch_texture;
GLuint tex1_tex, tex2_tex;

#include "tex1.h"
#include "tex2.h"

const char vertex_source[] =
"#version 330\n"
"layout(location = 0) in vec4 vposition;\n"
"layout(location = 1) in vec2 vtexcoord;\n"
"out vec2 ftexcoord;\n"
"void main() {\n"
"   ftexcoord = vtexcoord;\n"
"   gl_Position =vec4(vposition.xy, 0.0f, 1.0f);\n"
"}\n";


const char  scene1_shader[] =
"#version 330\n"
"in vec2 ftexcoord;\n"
"layout(location = 0) out vec4 FragColor;\n"
"uniform float fGlobalTime;"
"uniform vec2 v2Resolution;"
"vec2 v=v2Resolution;"
"uniform sampler2D texTex1,texTex2;"
"uniform float camx,camy,camz,sc1_mengertweak1,sc1_mengertweak2,sc1_mengertweak3;"
"float i=fGlobalTime,c=3.14153;\n"
"#define INF 100000.0\n"
"float t(vec3 v,vec3 g)"
"{"
"vec3 i=abs(v)-g;"
"return min(max(i.r,max(i.g,i.b)),0.)+length(max(i,0.));"
"}"
"float t(in vec3 v)"
"{"
"float i=t(v.rgb,vec3(INF,1.,1.)),c=t(v.gbr,vec3(1.,INF,1.)),g=t(v.brg,vec3(1.,1.,INF));"
"return min(i,min(c,g));"
"}"
"float p(vec3 v)"
"{"
"float i=t(v,vec3(1.)),f=1.;"
"for(int r=0;r<6;r++)"
"{"
"vec3 c=mod(v*f,sc1_mengertweak3)-sc1_mengertweak1;"
"f*=sc1_mengertweak2;"
"vec3 g=1.-2.*c;"
"float n=t(g)/f;"
"i=max(i,-n);"
"}"
"return i;"
"}"
"float p(vec3 v,float g)"
"{"
"return p(v/g)*g;"
"}"
"vec2 n(in vec3 v)"
"{"
"float i=p(v-vec3(0.,.5,0.),1.4);"
"vec2 g=vec2(i,2.);"
"return g;"
"}"
"vec2 n(in vec3 v,in vec3 g)"
"{"
"float i=0.,f=1.;"
"for(int r=0;r<68;r++)"
"{"
"vec2 c=n(v+g*i);"
"i+=c.r;"
"f=c.g;"
"}"
"return vec2(i,f);"
"}"
"float n(in vec3 v,in vec3 g,in float i,in float f)"
"{"
"float r=1.,c=i;"
"for(int m=0;m<16;m++)"
"{"
"float d=n(v+g*c).r;"
"r=min(r,8.*d/c);"
"c+=clamp(d,.02,.1);"
"if(d<.001||c>f)"
"break;"
"}"
"return clamp(r,0.,1.);"
"}"
"vec3 e(in vec3 v)"
"{"
"vec3 i=vec3(.001,0.,0.),c=vec3(n(v+i.rgg).r-n(v-i.rgg).r,n(v+i.grg).r-n(v-i.grg).r,n(v+i.ggr).r-n(v-i.ggr).r);"
"return normalize(c);"
"}"
"float e(in vec3 v,in vec3 g)"
"{"
"float i=0.,f=1.;"
"for(int r=0;r<5;r++)"
"{"
"float c=.01+.12*float(r)/4.;"
"vec3 d=g*c+v;"
"float m=n(d).r;"
"i+=-(m-c)*f;"
"f*=.95;"
"}"
"return clamp(1.-3.*i,0.,1.);"
"}"
"vec2 f(vec2 v)"
"{"
"return v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3))),fract(sin(v)*43758.5);"
"}"
"float r(vec2 v)"
"{"
"vec2 c=floor(v),n=fract(v);"
"float r=8.;"
"for(float g=-1.;g<=1.;g++)"
"for(float m=-1.;m<=1.;m++)"
"{"
"vec2 t=vec2(m,g),d=f(c+t);"
"d=.1+.5*sin(i+4.2831*d);"
"vec2 s=t+d-n;"
"float I=dot(s,s);"
"r=min(r,I);"
"}"
"return r;"
"}"
"float m(in vec2 v)"
"{"
"float g=r(v);"
"return 1.-smoothstep(0.,.75,g);"
"}"
"vec3 f(in vec3 v,in vec3 i)"
"{"
"vec3 f=vec3(0.,0.,0.);"
"vec2 c=n(v,i);"
"float g=c.r,d=c.g;"
"if(d>-.5)"
"{"
"vec3 r=v+g*i,s=e(r),I=reflect(i,s);"
"float t=clamp(dot(s,normalize(vec3(1,1,1))),0.,1.),l=.2*clamp(dot(s,normalize(vec3(.7,-1,.5))),0.,1.),p=.1*clamp(dot(s,normalize(vec3(-.7,-.4,.7))),0.,1.),o=pow(clamp(dot(I,normalize(vec3(1,1,1))),0.,1.),50.);"
"vec3 b=texture(texTex1,I.rg).rgb,a=texture(texTex2,I.rg*2.).rgb;"
"float u=m(16.*I.rg);"
"vec4 x=(u+1.)*vec4(.1,.3,.5,0.);"
"if(d==2.)"
"f=t*vec3(.1,.3,.5)+l*vec3(.1,.3,.5)+b+a+p*vec3(.1,.3,.5)*x.rgb+o*vec3(1,1,1)+x.rgb,f/=c.r*.44;"
"float k=e(r,s);"
"vec3 z=normalize(vec3(-.6,.7,-.5));"
"float w=clamp(.5+.5*I.g,0.,1.),T=clamp(dot(I,normalize(vec3(-z.r,0.,-z.b))),0.,1.)*clamp(1.-r.g,0.,1.),F=smoothstep(-.1,.1,I.g),N=pow(clamp(1.+dot(I,i),0.,1.),2.);"
"vec3 h=vec3(0.);"
"h+=.3*w*vec3(.5,.7,1.)*k;"
"h+=.4*F*vec3(.5,.7,1.)*k;"
"h+=.3*T*vec3(.25,.25,.25)*k;"
"h+=.4*N*vec3(1.,1.,1.)*k;"
"h+=.02;"
"f=f*h;"
"}"
"f*=c.r*.3;"
"return vec3(clamp(f,0.,1.));"
"}"
"mat3 e(in vec3 v,in vec3 i,float g)"
"{"
"vec3 c=normalize(i-v),f=vec3(sin(g),cos(g),0.),r=normalize(cross(c,f)),s=normalize(cross(r,c));"
"return mat3(r,s,c);"
"}"
"void main()"
"{"
"vec2 r=2.*gl_FragCoord.rg/v-1.;"
"r.r*=v.r/v.g;"
"float c=15.+i;"
"vec3 g=vec3(camx,camy,camz),s=vec3(-.5,-.2,.3);"
"mat3 m=e(g,s,0.);"
"vec3 n=m*normalize(vec3(r.rg,2.5)),d=f(g,n);"
"FragColor=vec4(d,1.);"
"}";


const char  scene3_shader[] =
"#version 330 core\n"
"layout(location = 0) out vec4 FragColor;\n"
"uniform float fGlobalTime;"
"uniform vec2 v2Resolution;"
"vec2 v=v2Resolution;"
"uniform sampler2D texTex1,texTex2;"
"uniform float sc3_rotatex,sc3_rotatey,sc3_rotatez,sc3_tweak1,sc3_tweak2,sc3_tweak3,sc3_tweak4,sc3_tweak5,sc3_mengerscale,sc3_lightscale;"
"float g=fGlobalTime,s=3.14153;"
"vec3 n(in vec3 v,float g)"
"{"
"return vec3(v.r,v.g*cos(g)-v.b*sin(g),v.g*sin(g)+v.b*cos(g));"
"}"
"vec3 t(in vec3 v,float g)"
"{"
"return vec3(v.r*cos(g)-v.b*sin(g),v.g,v.r*sin(g)+v.b*cos(g));"
"}"
"vec3 p(in vec3 v,float g)"
"{"
"return vec3(v.r*cos(g)-v.g*sin(g),v.r*sin(g)+v.g*cos(g),v.b);"
"}\n"
"#define INF 100000.0\n"
"float e(float g,float v)"
"{"
"return max(-v,g);"
"}"
"vec2 x(vec2 v,vec2 g)"
"{"
"return v.r<g.r?v:g;"
"}"
"vec3 f(vec3 v,vec3 g)"
"{"
"return mod(v,g)-.5*g;"
"}"
"vec3 e(vec3 v)"
"{"
"float g=cos(10.*v.g+10.),s=sin(10.*v.g+10.);"
"mat2 m=mat2(g,-s,s,g);"
"return vec3(m*v.rb,v.g);"
"}"
"float f(vec3 v)"
"{"
"return v.g;"
"}"
"float m(vec3 g,vec3 v)"
"{"
"vec3 s=abs(g)-v;"
"return min(max(s.r,max(s.g,s.b)),0.)+length(max(s,0.));"
"}"
"float m(in vec3 v)"
"{"
"float g=m(v.rgb,vec3(INF,1.,1.)),s=m(v.gbr,vec3(1.,INF,1.)),e=m(v.brg,vec3(1.,1.,INF));"
"return min(g,min(s,e));"
"}"
"float n(vec3 g)"
"{"
"float v=m(g,vec3(1.)),s=sc3_tweak1;"
"for(int f=0;f<4;f++)"
"{"
"vec3 c=mod(g*s,2.)-.5;"
"s*=sc3_tweak2;"
"vec3 e=sc3_tweak3-sc3_tweak4*c;"
"float r=m(e)/s;"
"v=max(v,-r);"
"}"
"return v;"
"}"
"float r(vec3 v,float g)"
"{"
"return n(v/g)*g;"
"}"
"float p(vec3 v)"
"{"
"if(sc3_rotatex>0.)"
"v=n(v,sc3_rotatex*g-3.);"
"if(sc3_rotatez>0.)"
"v=p(v,sc3_rotatez*g-2.);"
"if(sc3_rotatey>0.)"
"v=t(v,sc3_rotatey*g-2.);"
"if(sc3_tweak5>0.)"
"v.b-=.14*g;"
"vec3 f=mod(v,2.)-1.;"
"f=abs(f);"
"float s=r(f-vec3(0.,-.7,0.),sc3_mengerscale);"
"vec2 m=vec2(s,2.);"
"return m.r;"
"}"
"vec3 r(vec3 g)"
"{"
"vec3 v=vec3(.001,0.,0.);"
"float s=p(g+v.rgg)-p(g-v.rgg),f=p(g+v.grg)-p(g-v.grg),e=p(g+v.ggr)-p(g-v.ggr);"
"return normalize(vec3(s,f,e));"
"}"
"float w(in vec3 v,in vec3 g)"
"{"
"float f=0.,s=1.;"
"for(int r=0;r<5;r++)"
"{"
"float c=.01+.12*float(r)/4.;"
"vec3 m=g*c+v;"
"float i=p(m);"
"f+=-(i-c)*s;"
"s*=.95;"
"}"
"return clamp(1.-3.*f,0.,1.);"
"}"
"vec2 t(vec2 g)"
"{"
"return g=vec2(dot(g,vec2(127.1,311.7)),dot(g,vec2(269.5,183.3))),fract(sin(g)*43758.5);"
"}"
"float w(vec2 v)"
"{"
"vec2 s=floor(v),f=fract(v);"
"float r=8.;"
"for(float e=-1.;e<=1.;e++)"
"for(float m=-1.;m<=1.;m++)"
"{"
"vec2 c=vec2(m,e),d=t(s+c);"
"d=.1+.5*sin(g+4.2831*d);"
"vec2 i=c+d-f;"
"float n=dot(i,i);"
"r=min(r,n);"
"}"
"return r;"
"}"
"float x(in vec2 g)"
"{"
"float v=w(g);"
"return 1.-smoothstep(0.,.75,v);"
"}"
"vec3 c(vec2 v)"
"{"
"float c=3.,f=0.;"
"vec2 r=v*c-c/2.;"
"f+=sin(r.r+g);"
"f+=sin((r.g+g)/2.);"
"f+=sin((r.r+r.g+g)/4.);"
"r+=c/2.*vec2(sin(g/3.),cos(g/2.));"
"f+=sin(sqrt(r.r*r.r+r.g*r.g+1.)+g);"
"f=f*2.;"
"float m=sin(s*f),e=sin(s*f+2.*s/4.),d=sin(s*f+4.*s/3.);"
"vec3 i=vec3(m,e,d);"
"return vec3(i*.5+.5);"
"}"
"void main()"
"{"
"vec2 s=2.*gl_FragCoord.rg/v-1.;"
"s.r*=v.r/v.g;"
"vec2 f=gl_FragCoord.rg/v.rg;"
"vec3 m=vec3(0.,0.,1.),e=normalize(vec3(s.r,s.g,-1.6)),i=vec3(0.),d=m;"
"float n=0.;"
"for(int u=0;u<100;u++)"
"{"
"float t=p(d);"
"d+=e*t;"
"n+=t;"
"}"
"vec3 t=r(d),b=reflect(normalize(d-m),t);"
"float a=clamp(dot(t,normalize(vec3(1,1,1))),0.,1.),I=.2*clamp(dot(t,normalize(vec3(.7,-1,.5))),0.,1.),l=pow(clamp(dot(b,normalize(vec3(1,1,1))),0.,1.),50.);"
"vec3 u=normalize(vec3(sin(g-.5)*.5,sin(g-.5)*.5,-1)),F=normalize(vec3(sin(g-.5)*.5,-1,sin(g-.5)*.5)),z=normalize(vec3(-1,sin(g-.5)*.5,sin(g-.5)*.5)),y=normalize(vec3(sin(g-.5)*.5,sin(g-.5)*.5,sin(g-.5)*.5)),o=normalize(vec3(sin(g-.5)*.5,sin(g-.7)*.3,sin(g-.5)*.5));"
"float k=pow(max(.5,dot(reflect(u,t),e)),sc3_lightscale),h=pow(max(.5,dot(reflect(F,t),e)),sc3_lightscale),T=pow(max(.5,dot(reflect(z,t),e)),sc3_lightscale),N=pow(max(.5,dot(reflect(y,t),e)),sc3_lightscale),C=pow(max(.5,dot(reflect(y,t),e)),sc3_lightscale);"
"vec3 R=texture(texTex1,b.rg*.5).rgb,G=texture(texTex2,b.rg).rgb;"
"float D=x(16.*f);"
"vec4 q=(D+1.)*vec4(.1,.3,.5,0.);"
"i=a*vec3(.1,.3,.5)+I*vec3(.1,.3,.5)+R+G*q.rgb*c(b.rg)+T*c(b.rg)+h*vec3(1,1,0)+l*c(b.rg)*1.5+k*c(b.rg)+N*c(b.rg)+C*c(b.rg);"
"float Z=w(d,t);"
"vec3 Y=normalize(vec3(-.6,.7,-.5));"
"float X=clamp(.5+.5*b.g,0.,1.),W=clamp(dot(b,normalize(vec3(-Y.r,0.,-Y.b))),0.,1.)*clamp(1.-d.g,0.,1.),V=smoothstep(-.1,.1,b.g),U=pow(clamp(1.+dot(b,e),0.,1.),2.);"
"vec3 S=vec3(0.);"
"S+=.3*X*vec3(.5,.7,1.)*Z;"
"S+=.4*V*vec3(.5,.7,1.)*Z;"
"S+=.3*W*vec3(.25,.25,.25)*Z;"
"S+=.4*U*vec3(1.,1.,1.)*Z;"
"S+=.12;"
"i=i*S;"
"FragColor=vec4(i,1.);"
"}";





const char  scene4_shader[] =
"#version 330 core\n"
"uniform float fGlobalTime;"
"uniform vec2 v2Resolution;"
"vec2 v=v2Resolution;"
"layout(location = 0) out vec4 FragColor;\n"
"uniform sampler2D texTex1,texTex2;"
"float g=fGlobalTime,i=3.14153;\n"
"#define INF 100000.0\n"
"uniform float sc3_lightscale;"
"float n(float v,float g)"
"{"
"return max(-g,v);"
"}"
"vec2 t(vec2 v,vec2 g)"
"{"
"return v.r<g.r?v:g;"
"}"
"vec3 p(vec3 v,vec3 g)"
"{"
"return mod(v,g)-.5*g;"
"}"
"vec3 n(vec3 v)"
"{"
"float g=cos(10.*v.g+10.),i=sin(10.*v.g+10.);"
"mat2 m=mat2(g,-i,i,g);"
"return vec3(m*v.rb,v.g);"
"}"
"float p(vec3 v)"
"{"
"return v.g;"
"}"
"float s(vec3 v,vec3 g)"
"{"
"vec3 i=abs(v)-g;"
"return min(max(i.r,max(i.g,i.b)),0.)+length(max(i,0.));"
"}"
"float s(in vec3 v)"
"{"
"float i=s(v.rgb,vec3(INF,1.,1.)),g=s(v.gbr,vec3(1.,INF,1.)),n=s(v.brg,vec3(1.,1.,INF));"
"return min(i,min(g,n));"
"}"
"float t(vec3 v)"
"{"
"float i=s(v,vec3(1.)),g=2.;"
"for(int f=0;f<3;f++)"
"{"
"vec3 m=mod(v*g,2.)-.35;"
"g*=4.6;"
"vec3 r=1.-2.*m;"
"float e=s(r)/g;"
"i=max(i,-e);"
"}"
"return i;"
"}"
"float e(vec3 v,float g)"
"{"
"return t(v/g)*g;"
"}"
"float m(vec3 v,vec3 g)"
"{"
"vec3 i=abs(v)-g;"
"return min(max(i.r,max(i.g,i.b)),0.)+length(max(i,.1))+clamp(sin(v.b*4.*3.)*.04,0.,1.);"
"}"
"float e(in vec3 v)"
"{"
"float i=m(v.rgb,vec3(INF,1.,1.)),g=m(v.gbr,vec3(1.,INF,1.)),n=m(v.brg,vec3(1.,1.,INF));"
"return min(i,min(g,n));"
"}"
"float f(vec3 v,float g)"
"{"
"return e(v/g)*g;"
"}"
"vec2 f(in vec3 v)"
"{"
"float g=-.7;"
"vec3 i=mod(v,2.)-1.,n=abs(v);"
"float m=length(max(abs(i-vec3(0.,-.7,0.))-vec3(.25),0.))-.02+clamp(sin((i.r+i.g+i.b)*23.)*.02,0.,1.),r=e(i-vec3(0.,-.7,0.),.4),s=f(i-vec3(0.,-.7,0.),.1);"
"vec2 c=t(vec2(p(v),1.),vec2(s,2.));"
"c=t(c,vec2(r,2.));"
"return c;"
"}"
"vec2 x(in vec3 v,in vec3 g)"
"{"
"float i=0.,r=-1.;"
"for(int m=0;m<75;m++)"
"{"
"vec2 s=f(v+g*i);"
"i+=s.r;"
"r=s.g;"
"}"
"return vec2(i,r);"
"}"
"float e(in vec3 v,in vec3 g,in float m,in float i)"
"{"
"float r=1.,n=m;"
"for(int c=0;c<16;c++)"
"{"
"float s=f(v+g*n).r;"
"r=min(r,8.*s/n);"
"n+=clamp(s,.02,.1);"
"if(s<.001||n>i)"
"break;"
"}"
"return clamp(r,0.,1.);"
"}"
"vec3 m(in vec3 v)"
"{"
"vec3 i=vec3(.001,0.,0.),g=vec3(f(v+i.rgg).r-f(v-i.rgg).r,f(v+i.grg).r-f(v-i.grg).r,f(v+i.ggr).r-f(v-i.ggr).r);"
"return normalize(g);"
"}"
"float r(in vec3 v,in vec3 g)"
"{"
"float i=0.,r=1.;"
"for(int m=0;m<5;m++)"
"{"
"float c=.01+.12*float(m)/4.;"
"vec3 s=g*c+v;"
"float d=f(s).r;"
"i+=-(d-c)*r;"
"r*=.95;"
"}"
"return clamp(1.-3.*i,0.,1.);"
"}"
"vec2 r(vec2 v)"
"{"
"return v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3))),fract(sin(v)*43758.5);"
"}"
"float x(vec2 v)"
"{"
"vec2 i=floor(v),n=fract(v);"
"float m=8.;"
"for(float f=-1.;f<=1.;f++)"
"for(float c=-1.;c<=1.;c++)"
"{"
"vec2 s=vec2(c,f),d=r(i+s);"
"d=.1+.5*sin(g+4.2831*d);"
"vec2 e=s+d-n;"
"float b=dot(e,e);"
"m=min(m,b);"
"}"
"return m;"
"}"
"float c(in vec2 v)"
"{"
"float g=x(v);"
"return 1.-smoothstep(0.,.75,g);"
"}"
"vec3 w(vec2 v)"
"{"
"float m=3.,r=0.;"
"vec2 f=v*m-m/2.;"
"r+=sin(f.r+g);"
"r+=sin((f.g+g)/2.);"
"r+=sin((f.r+f.g+g)/4.);"
"f+=m/2.*vec2(sin(g/3.),cos(g/2.));"
"r+=sin(sqrt(f.r*f.r+f.g*f.g+1.)+g);"
"r=r*2.;"
"float s=sin(i*r),n=sin(i*r+2.*i/4.),e=sin(i*r+4.*i/3.);"
"vec3 c=vec3(s,n,e);"
"return vec3(c*.5+.5);"
"}"
"vec3 c(in vec3 v,in vec3 i)"
"{"
"vec3 f=vec3(0.,0.,0.);"
"vec2 s=x(v,i);"
"float n=s.r,d=s.g;"
"if(d>-.5)"
"{"
"vec3 b=v+n*i,F=m(b),I=reflect(i,F);"
"float p=clamp(dot(F,normalize(vec3(1,1,1))),0.,1.),t=.2*clamp(dot(F,normalize(vec3(.7,-1,.5))),0.,1.),l=.1*clamp(dot(F,normalize(vec3(-.7,-.4,.7))),0.,1.);"
"vec3 o=texture(texTex1,I.rg).rgb,a=texture(texTex2,I.rg*2.).rgb;"
"float u=c(16.*I.rg);"
"vec4 z=(u+1.)*vec4(.1,.3,.5,0.);"
"vec3 h=normalize(vec3(sin(g-.5)*.5,sin(g-.5)*.5,1)),N=normalize(vec3(1,1,1)),T=normalize(vec3(-1,1,1));"
"float R=pow(max(.5,dot(reflect(h,F),i)),sc3_lightscale),G=pow(max(.5,dot(reflect(N,F),i)),sc3_lightscale),C=pow(max(.5,dot(reflect(T,F),i)),sc3_lightscale),D=pow(clamp(dot(I,normalize(vec3(1,1,1))),0.,1.),sc3_lightscale);"
"vec3 k=C*vec3(1,0,0)+G*w(i.rg)+D*w(I.rg)+R*w(b.rg);"
"if(d==2.)"
"f=p*vec3(.1,.3,.5)+t*vec3(.1,.3,.5)+o+a+l*vec3(.1,.3,.5)*z.rgb+k,f*=s.r*.8;"
"if(d==1.)"
"{"
"float q=mod(floor(5.*b.b)+floor(5.*b.r),2.);"
"f=t+o+a+q+l*vec3(.1,.3,.5)*z.rgb+D*w(i.rg)+k;"
"f/=s.r*.74;"
"}"
"float q=r(b,F);"
"vec3 Z=normalize(vec3(-.6,.7,-.5));"
"float Y=clamp(.5+.5*I.g,0.,1.),X=clamp(dot(I,Z),0.,1.),W=clamp(dot(I,normalize(vec3(-Z.r,0.,-Z.b))),0.,1.)*clamp(1.-b.g,0.,1.),V=smoothstep(-.1,.1,I.g),U=pow(clamp(1.+dot(I,i),0.,1.),2.);"
"X*=e(b,Z,.02,2.5);"
"V*=e(b,I,.02,2.5);"
"vec3 S=vec3(0.);"
"S+=.3*Y*vec3(.5,.7,1.)*q;"
"S+=.4*V*vec3(.5,.7,1.)*q;"
"S+=.3*W*vec3(.25,.25,.25)*q;"
"S+=.4*U*vec3(1.,1.,1.)*q;"
"S+=.02;"
"f=f*S;"
"}"
"f/=s.r*.7;"
"return vec3(clamp(f,0.,1.));"
"}"
"mat3 c(in vec3 v,in vec3 i,float g)"
"{"
"vec3 m=normalize(i-v),n=vec3(sin(g),cos(g),0.),r=normalize(cross(m,n)),s=normalize(cross(r,m));"
"return mat3(r,s,m);"
"}"
"void main()"
"{"
"vec2 i=2.*gl_FragCoord.rg/v-1.;"
"i.r*=v.r/v.g;"
"float m=15.+g;"
"vec3 r=vec3(-.2+3.2*cos(.1*g+6.),1.6,.6+2.*sin(.5*g+6.)),n=vec3(-.5,-.4,.5);"
"mat3 s=c(r,n,0.);"
"vec3 f=s*normalize(vec3(i.rg,2.5)),d=c(r,f);"
"d=pow(d,vec3(1.4545));"
"FragColor=vec4(d,1.);"
"}";

const char scene5_shader[] = ""
"#version 330 core\n"
"layout(location = 0) out vec4 FragColor;\n"
"uniform float fGlobalTime;"
"uniform vec2 v2Resolution;"
"vec2 v=v2Resolution;"
"uniform sampler2D texTex1,texTex2;"
"float g=fGlobalTime,i=3.14153;\n"
"#define INF 100000.0\n"
"float f=-.7,r=.15,n=1.,s=.33;"
"uniform float sc3_lightscale;"
"vec3 p(in vec3 v,float g)"
"{"
"return vec3(v.r,v.g*cos(g)-v.b*sin(g),v.g*sin(g)+v.b*cos(g));"
"}"
"vec3 t(in vec3 v,float g)"
"{"
"return vec3(v.r*cos(g)-v.b*sin(g),v.g,v.r*sin(g)+v.b*cos(g));"
"}"
"vec3 e(in vec3 v,float g)"
"{"
"return vec3(v.r*cos(g)-v.g*sin(g),v.r*sin(g)+v.g*cos(g),v.b);"
"}"
"float m(float v,float g)"
"{"
"return max(-g,v);"
"}"
"vec2 x(vec2 v,vec2 g)"
"{"
"return v.r<g.r?v:g;"
"}"
"vec3 h(vec3 v,vec3 g)"
"{"
"return mod(v,g)-.5*g;"
"}"
"vec3 e(vec3 v)"
"{"
"float g=cos(10.*v.g+10.),r=sin(10.*v.g+10.);"
"mat2 i=mat2(g,-r,r,g);"
"return vec3(i*v.rb,v.g);"
"}"
"float h(vec3 v)"
"{"
"return v.g;"
"}"
"float c(vec3 g,vec3 v)"
"{"
"vec3 i=abs(g)-v;"
"return min(max(i.r,max(i.g,i.b)),0.)+length(max(i,0.));"
"}"
"float c(in vec3 v)"
"{"
"float g=c(v.rgb,vec3(INF,1.,1.)),i=c(v.gbr,vec3(1.,INF,1.)),f=c(v.brg,vec3(1.,1.,INF));"
"return min(g,min(i,f));"
"}"
"float m(vec3 v)"
"{"
"float i=c(v,vec3(1.)),r=1.;"
"for(float f=0;f<5;f++)"
"{"
"vec3 m=mod(v*r,2)-s;"
"r*=2.;"
"vec3 b=1.-1.5*m;"
"b+=sin(g)*.47;"
"float e=c(b)/r;"
"i=max(i,-e);"
"}"
"return i;"
"}"
"float w(vec3 v,float g)"
"{"
"return m(v/g)*g;"
"}"
"float l(vec3 v,vec3 g)"
"{"
"vec3 i=abs(v)-g;"
"return min(max(i.r,max(i.g,i.b)),0.)+length(max(i,0.))+clamp(sin((v.r+v.g+v.b)*6.)*.02,0.,1.);"
"}"
"float l(in vec3 v)"
"{"
"float g=l(v.rgb,vec3(INF,1.,1.)),i=l(v.gbr,vec3(1.,INF,1.)),f=l(v.brg,vec3(1.,1.,INF));"
"return min(g,min(i,f));"
"}"
"float d(vec3 v,float g)"
"{"
"return l(v/g)*g;"
"}"
"vec2 d(in vec3 v)"
"{"
"vec3 i=mod(v,2.)-1.,b=v;"
"float s=length(max(abs(b-vec3(0.,r,2.))-vec3(.25),0.))-.01+clamp(sin((b.r+b.g+b.b)*23.)*.02,0.,1.),n=length(max(abs(b)-.5,0.))-.01+clamp(sin((b.r+b.g+b.b)*20.)*.03,0.,1.),I=length(b-vec3(0.,.5,0.))-.6,c=m(n,I);"
"b=p(b,.6*g-2.);"
"b=e(b,.4*g-2.);"
"b=t(b,.22*g);"
"float F=length(max(abs(b)-.6,0.))-.01+clamp(sin((b.r+b.g+b.g)*10.)*.03,0.,1.),a=length(b)-.4,l=m(a,F),o=c<l?c:l,u=w(i-vec3(0.,f,0.),1.),z=d(i-vec3(0.,f,0.),.1);"
"vec2 k=x(vec2(h(v),1.),vec2(u,2.));"
"k=x(k,vec2(o,2.));"
"k=x(k,vec2(s,1.));"
"return k;"
"}"
"vec2 a(in vec3 v,in vec3 g)"
"{"
"float i=0.,f=-1.;"
"for(int r=0;r<75;r++)"
"{"
"vec2 m=d(v+g*i);"
"i+=m.r;"
"f=m.g;"
"if(m.r<=.001)"
"return vec2(i,f);"
"}"
"return vec2(i,f);"
"}"
"float a(in vec3 v,in vec3 g,in float m,in float b)"
"{"
"float i=1.,f=m;"
"for(int r=0;r<16;r++)"
"{"
"float s=d(v+g*f).r;"
"i=min(i,8.*s/f);"
"f+=clamp(s,.02,.1);"
"if(s<.001||f>b)"
"break;"
"}"
"return clamp(i,0.,1.);"
"}"
"vec3 a(in vec3 v)"
"{"
"vec3 g=vec3(.01,0.,0.),i=vec3(d(v+g.rgg).r-d(v-g.rgg).r,d(v+g.grg).r-d(v-g.grg).r,d(v+g.ggr).r-d(v-g.ggr).r);"
"return normalize(i);"
"}"
"float I(in vec3 v,in vec3 g)"
"{"
"float r=0.,f=1.;"
"for(int i=0;i<5;i++)"
"{"
"float b=.01+.12*float(i)/4.;"
"vec3 m=g*b+v;"
"float s=d(m).r;"
"r+=-(s-b)*f;"
"f*=.95;"
"}"
"return clamp(1.-3.*r,0.,1.);"
"}"
"vec2 I(vec2 v)"
"{"
"return v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3))),fract(sin(v)*43758.5);"
"}"
"float p(vec2 v)"
"{"
"vec2 i=floor(v),f=fract(v);"
"float r=8.;"
"for(float b=-1.;b<=1.;b++)"
"for(float m=-1.;m<=1.;m++)"
"{"
"vec2 c=vec2(m,b),s=I(i+c);"
"s=.1+.5*sin(g+4.2831*s);"
"vec2 n=c+s-f;"
"float e=dot(n,n);"
"r=min(r,e);"
"}"
"return r;"
"}"
"float t(in vec2 v)"
"{"
"float g=p(v);"
"return 1.-smoothstep(0.,.75,g);"
"}"
"vec3 w(vec2 v)"
"{"
"float s=3.,f=0.;"
"vec2 b=v*s-s/2.;"
"f+=sin(b.r+g);"
"f+=sin((b.g+g)/2.);"
"f+=sin((b.r+b.g+g)/4.);"
"b+=s/2.*vec2(sin(g/3.),cos(g/2.));"
"f+=sin(sqrt(b.r*b.r+b.g*b.g+1.)+g);"
"f=f*2.;"
"float r=sin(i*f),n=sin(i*f+2.*i/4.),m=sin(i*f+4.*i/3.);"
"vec3 c=vec3(r,n,m);"
"return vec3(c*.5+.5);"
"}"
"vec3 o(in vec3 v,in vec3 i)"
"{"
"vec3 f=vec3(0.,0.,0.);"
"vec2 m=a(v,i);"
"float r=m.r,s=m.g;"
"if(s>-.5)"
"{"
"vec3 b=v+r*i,n=a(b),c=reflect(i,n);"
"float l=clamp(dot(n,normalize(vec3(1,1,1))),0.,1.),p=.2*clamp(dot(n,normalize(vec3(.7,-1,.5))),0.,1.),d=.1*clamp(dot(n,normalize(vec3(-.7,-.4,.7))),0.,1.),e=pow(clamp(dot(c,normalize(vec3(1,1,1))),0.,1.),50.);"
"vec3 k=normalize(vec3(sin(g-.5)*.7,sin(g-.5)*.5,1)),F=normalize(vec3(-1,-1,1)),o=normalize(vec3(-1,-1,1));"
"float x=pow(max(.5,dot(reflect(k,n),i)),sc3_lightscale),u=pow(max(.5,dot(reflect(F,n),i)),sc3_lightscale),z=pow(max(.5,dot(reflect(o,n),i)),sc3_lightscale);"
"vec3 h=z*w(i.rg)+u*w(c.rg)+e*w(c.rg)+x*w(b.rg),N=texture(texTex1,c.rg).rgb,T=texture(texTex2,c.rg*2.).rgb;"
"float R=t(16.*c.rg);"
"vec4 G=(R+1.)*vec4(.1,.3,.5,0.);"
"if(s==2.)"
"f=l*vec3(.1,.3,.5)+p*vec3(.1,.3,.5)+N+T+d*vec3(.1,.3,.5)*G.rgb+h,f*=m.r;"
"if(s==1.)"
"{"
"float C=mod(floor(5.*b.b)+floor(5.*b.r),2.);"
"f=p+N+T+C+d*vec3(.1,.3,.5)*G.rgb+e*vec3(1,1,1)+G.rgb;"
"f/=m.r*.54;"
"}"
"float C=I(b,n);"
"vec3 D=normalize(vec3(-.6,.7,-.5));"
"float q=clamp(.5+.5*c.g,0.,1.),Z=clamp(dot(c,D),0.,1.),Y=clamp(dot(c,normalize(vec3(-D.r,0.,-D.b))),0.,1.)*clamp(1.-b.g,0.,1.),X=smoothstep(-.1,.1,c.g),W=pow(clamp(1.+dot(c,i),0.,1.),2.);"
"Z*=a(b,D,.02,2.5);"
"X*=a(b,c,.02,2.5);"
"vec3 V=vec3(0.);"
"V+=.3*q*w(c.rg)*C;"
"V+=.4*X*vec3(.5,.7,1.)*C;"
"V+=.3*Y*vec3(.25,.25,.25)*C;"
"V+=.4*W*vec3(1.,1.,1.)*C;"
"V+=.02;"
"f=f*V;"
"}"
"f/=m.r*.7;"
"return vec3(clamp(f,0.,1.));"
"}"
"mat3 I(in vec3 v,in vec3 i,float g)"
"{"
"vec3 b=normalize(i-v),f=vec3(sin(g),cos(g),0.),r=normalize(cross(b,f)),n=normalize(cross(r,b));"
"return mat3(r,n,b);"
"}"
"void main()"
"{"
"vec2 i=2.*gl_FragCoord.rg/v-1.;"
"i.r*=v.r/v.g;"
"float f=15.+g;"
"vec3 b=vec3(-.25+3.2*cos(.1*g+6.),1.5,.5+2.2*sin(.1*g+6.)),r=vec3(-.5,-.4,.5);"
"mat3 m=I(b,r,0.);"
"vec3 n=m*normalize(vec3(i.rg,2.5)),s=o(b,n);"
"s=pow(s,vec3(1.4545));"
"FragColor=vec4(s,1.);"
"}";



void init_raymarch()
{
	initShader((int*)&raymarch_shader_program[0], vertex_source, (const char*)scene1_shader);
	initShader((int*)&raymarch_shader_program[2], vertex_source, (const char*)scene3_shader);
	initShader((int*)&raymarch_shader_program[3], vertex_source, (const char*)scene4_shader);
	initShader((int*)&raymarch_shader_program[4], vertex_source, (const char*)scene5_shader);

	// get texture uniform location


	// vao and vbo handle
	GLuint vbo;

	// generate and bind the vao
	glGenVertexArrays(1, &raymarch_vao);
	glBindVertexArray(raymarch_vao);

	// generate and bind the vertex buffer object
	glGenBuffers(1, &vbo);
	glBindBuffer(GL_ARRAY_BUFFER, vbo);

	// data for a fullscreen quad (this time with texture coords)
	GLfloat vertexData[] = {
		//  X     Y     Z           U     V     
		1.0f, 1.0f, 0.0f, 1.0f, 1.0f, // vertex 0
		-1.0f, 1.0f, 0.0f, 0.0f, 1.0f, // vertex 1
		1.0f, -1.0f, 0.0f, 1.0f, 0.0f, // vertex 2
		1.0f, -1.0f, 0.0f, 1.0f, 0.0f, // vertex 2
		-1.0f, -1.0f, 0.0f, 0.0f, 0.0f, // vertex 3
		-1.0f, 1.0f, 0.0f, 0.0f, 1.0f, // vertex 1
	}; // 6 vertices with 5 components (floats) each

	// fill with data
	glBufferData(GL_ARRAY_BUFFER, sizeof(GLfloat) * 6 * 5, vertexData, GL_STATIC_DRAW);
	// set up generic attrib pointers
	glEnableVertexAttribArray(0);
	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (char*)0 + 0 * sizeof(GLfloat));

	glEnableVertexAttribArray(1);
	glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (char*)0 + 3 * sizeof(GLfloat));
	// "unbind" voa
	glBindVertexArray(0);
	glBindBuffer(GL_ARRAY_BUFFER, 0);

	int width = 32;
	int height = 32;
	GLubyte image[4 * 32 * 32] = { 0 };
	for (int j = 0; j < height; ++j) {
		for (int i = 0; i < width; ++i) {
			size_t index = j*width + i;
			image[4 * index + 0] = 0xFF * (j / 10 % 2)*(i / 10 % 2); // R
			image[4 * index + 1] = 0xFF * (j / 13 % 2)*(i / 13 % 2); // G
			image[4 * index + 2] = 0xFF * (j / 17 % 2)*(i / 17 % 2); // B
			image[4 * index + 3] = 0xFF; // A
		}
	}

	glGenTextures(1, &raymarch_texture);
	glBindTexture(GL_TEXTURE_2D, raymarch_texture);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
	// set texture content
	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, image);
	glBindTexture(GL_TEXTURE_2D, 0);
	int width2, height2;
	tex1_tex = loadTexMemory(tex1_png, tex1_png_len, &width2, &height2,1);
	tex2_tex = loadTexMemory(tex2_png, tex2_png_len, &width2, &height2,1);
}

void draw_raymarch(float time, float camx, float camy, float camz, int program){
	glUseProgram(raymarch_shader_program[program]);
	GLint texture_location = glGetUniformLocation(raymarch_shader_program[program], "tex");
	GLint texture_location2 = glGetUniformLocation(raymarch_shader_program[program], "texTex1");
	GLint texture_location3 = glGetUniformLocation(raymarch_shader_program[program], "texTex2");
	GLint uniform_resolution = glGetUniformLocation(raymarch_shader_program[program], "v2Resolution");
	GLint uniform_time = glGetUniformLocation(raymarch_shader_program[program], "fGlobalTime");

	GLint uniform_camx = glGetUniformLocation(raymarch_shader_program[program], "camx");
	GLint uniform_camy = glGetUniformLocation(raymarch_shader_program[program], "camy");
	GLint uniform_camz = glGetUniformLocation(raymarch_shader_program[program], "camz");


	GLint uniform_sc1_mengertweak1 = glGetUniformLocation(raymarch_shader_program[program], "sc1_mengertweak1");
	GLint uniform_sc1_mengertweak2 = glGetUniformLocation(raymarch_shader_program[program], "sc1_mengertweak2");
	GLint uniform_sc1_mengertweak3 = glGetUniformLocation(raymarch_shader_program[program], "sc1_mengertweak3");

	GLuint uniform_speed = glGetUniformLocation(raymarch_shader_program[program], "speed");

	GLint uniform_sc3_rotatex = glGetUniformLocation(raymarch_shader_program[program], "sc3_rotatex");
	GLint uniform_sc3_rotatey = glGetUniformLocation(raymarch_shader_program[program], "sc3_rotatey");
	GLint uniform_sc3_rotatez = glGetUniformLocation(raymarch_shader_program[program], "sc3_rotatez");

	GLint uniform_sc3_tweak1 = glGetUniformLocation(raymarch_shader_program[program], "sc3_tweak1");
	GLint uniform_sc3_tweak2 = glGetUniformLocation(raymarch_shader_program[program], "sc3_tweak2");
	GLint uniform_sc3_tweak3 = glGetUniformLocation(raymarch_shader_program[program], "sc3_tweak3");
	GLint uniform_sc3_tweak4 = glGetUniformLocation(raymarch_shader_program[program], "sc3_tweak4");
	GLint uniform_sc3_tweak5 = glGetUniformLocation(raymarch_shader_program[program], "sc3_tweak5");
	GLint uniform_sc3_mengerscale = glGetUniformLocation(raymarch_shader_program[program], "sc3_mengerscale");
	GLint uniform_sc3_lightscale = glGetUniformLocation(raymarch_shader_program[program], "sc3_lightscale");

	// set the uniform
	// bind texture to texture unit 0
	glActiveTexture(GL_TEXTURE0);
	glBindTexture(GL_TEXTURE_2D, raymarch_texture);
	glUniform1i(texture_location, 0);
	glActiveTexture(GL_TEXTURE0 + 1);
	glBindTexture(GL_TEXTURE_2D, tex1_tex);
	glUniform1i(texture_location2, 1);
	glActiveTexture(GL_TEXTURE0 + 2);
	glBindTexture(GL_TEXTURE_2D, tex2_tex);
	glUniform1i(texture_location3, 2);

	glUniform2f(uniform_resolution, XRES, YRES);
	glUniform1f(uniform_time, time);
	glUniform1f(uniform_camx, camx);
	glUniform1f(uniform_camy, camy);
	glUniform1f(uniform_camz, camz);


	glUniform1f(uniform_sc1_mengertweak1, sc1_mengertweak1);
	glUniform1f(uniform_sc1_mengertweak2, sc1_mengertweak2);
	glUniform1f(uniform_sc1_mengertweak3, sc1_mengertweak3);

	glUniform1f(uniform_speed, speed_f);

	glUniform1f(uniform_sc3_rotatex, sc3_rotatex);
	glUniform1f(uniform_sc3_rotatey, sc3_rotatey);
	glUniform1f(uniform_sc3_rotatez, sc3_rotatez);

	glUniform1f(uniform_sc3_tweak1, sc3_tweak1);
	glUniform1f(uniform_sc3_tweak2, sc3_tweak2);
	glUniform1f(uniform_sc3_tweak3, sc3_tweak3);
	glUniform1f(uniform_sc3_tweak4, sc3_tweak4);
	glUniform1f(uniform_sc3_tweak5, sc3_tweak5);
	glUniform1f(uniform_sc3_mengerscale, sc3_mengerscale);
	glUniform1f(uniform_sc3_lightscale, sc3_lightscale);




	// bind the vao
	glEnable(GL_BLEND);
	glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glBindVertexArray(raymarch_vao);
	// draw
	glDrawArrays(GL_TRIANGLES, 0, 6);
	glBindTexture(GL_TEXTURE_2D, 0);
	glBindVertexArray(0);
	glUseProgram(0);
	glDisable(GL_BLEND);
}