
uniform vec4 fpar;


//Object A (tunnel)
float oa(vec3 q)
{
 float a = sin(q.x)+cos(q.y*1.5)+sin(q.z)+sin(q.y*20.)*.05;
 float b = sin(q.y)*sin(q.y*0.2);
 float c = sin(q.x-q.y);
 return a+b-c;
}

float ob(vec3 o)
{
    float a=(sin(o.x)+o.y*.25)*.35;
    o=vec3(cos(a)*o.x-sin(a)-o.y,sin(a)*o.x+cos(a)*o.x,o.z);
    return dot(cos(o)*cos(o),vec3(1))-1.2;
}

float opI( float d1, float d2 )
{
    return max(d1,d2);
}

//Scene
float o(vec3 q)
{
 return opI(oa(q),ob(q));
}

//Get Normal
vec3 gn(vec3 q)
{
 vec3 f=vec3(.01,0,0);
 return normalize(vec3(o(q+f.xyy),o(q+f.yxy),o(q+f.yyx)));
}

void main(void)
{
 vec2 p = -1.0 + 2.0 * gl_FragCoord.xy / fpar.yz;
 p.x *= fpar.y/fpar.z;
 vec4 c=vec4(0.0);
 vec3 org=vec3(.5,.25+.25,fpar.x),dir=normalize(vec3(p.x*1.6,p.y,1.0)),q=org,pp;
 float d=.0;

 //First raymarching
 for(int i=0;i<128;i++)
 {
  d=o(q);
  q+=d*dir;
 }
 pp=q;
 float f=length(q-org)*0.02;
 //Final Color
 vec4 fcolor = ((vec4(f))*vec4(1.,.8,.7,1.));
 gl_FragColor=vec4(fcolor.xyz,1.0);
}