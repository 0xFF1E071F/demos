//--------------------------------------------------------------------------//
// iq / rgba  .  tiny codes  .  2008                                        //
//--------------------------------------------------------------------------//
const char creditsintro_frag[] = ""
"uniform vec2 resolution;"
"uniform float time,fade;"
"const float r=3.14159;"
"vec3 n(float m,vec3 r)"
"{"
"float v=cos(m),g=sin(m);"
"return r*mat3(1.,0.,0.,0.,v,-g,0.,g,v);"
"}"
"vec3 s(float m,vec3 r)"
"{"
"float v=cos(m),g=sin(m);"
"return r*mat3(v,0.,g,0.,1.,0.,-g,0.,v);"
"}"
"vec3 v(float m,vec3 r)"
"{"
"float v=cos(m),g=sin(m);"
"return r*mat3(v,-g,0.,g,v,0.,0.,0.,1.);"
"}"
"float n(vec3 m)"
"{"
"float v=.5,g=v*.15;"
"vec3 r;"
"r.r=length(max(abs(mod(m.bg,v)-.25)-g,0.));"
"r.g=length(max(abs(mod(m.rr,v)-.25)-g,0.));"
"return-min(min(max(max(-r.r,-r.g),-r.r),0.),0.);"
"}"
"vec3 s(vec3 m)"
"{"
"vec3 r=vec3(.005,-.005,0);"
"return normalize(vec3(n(m+r.rgg),n(m+r.grg),n(m+r.ggr)));"
"}"
"float n(vec3 m,vec3 r,float v)"
"{"
"const int g=96;"
"for(int f=0;f<g;f++)"
"{"
"float s=n(m+r*v);"
"v+=s*fade;"
"}"
"return v;"
"}"
"void main()"
"{"
"vec2 r=gl_FragCoord.rg/resolution.rg,m=-1.+2.*r;"
"float g=time*.5;"
"vec3 f=normalize(vec3(m*vec2(1./resolution.g*resolution.r,1.),.85));"
"f=n(.1,f);"
"f=v(1.6,f);"
"vec3 c=vec3(0.,0.,6.*g*.0625);"
"float i=0.;"
"i=n(c,f,i);"
"vec3 a=c+f*i,d=s(a);"
"f=reflect(f,d);"
"i+=f.r;"
"i=n(c,f,i);"
"if(i>0.)"
"{"
"float e=(d.r*2.8+d.g+d.b)*.25-i*.025;"
"vec3 t=vec3(e*i*.1,e*i*.25+i*.01125,e*.175+i*.0125);"
"if(t.g>1.)"
"t=vec3(1,1,1);"
"gl_FragColor=vec4(smoothstep(.8,.9,e)+t*t,1.);"
"}"
"}";

const char pillars_frag[] = ""
"uniform vec2 resolution;"
"uniform float time,fade;"
"const float m=3.14159;"
"vec3 n(float m,vec3 g)"
"{"
"float v=cos(m),r=sin(m);"
"return g*mat3(1.,0.,0.,0.,v,-r,0.,r,v);"
"}"
"vec3 s(float m,vec3 g)"
"{"
"float v=cos(m),r=sin(m);"
"return g*mat3(v,0.,r,0.,1.,0.,-r,0.,v);"
"}"
"vec3 v(float m,vec3 g)"
"{"
"float v=cos(m),r=sin(m);"
"return g*mat3(v,-r,0.,r,v,0.,0.,0.,1.);"
"}"
"float n(vec3 m)"
"{"
"float v=.5,r=v*.125;"
"vec3 n;"
"n.r=length(max(abs(mod(m.bg,v)-.25)-r,0.));"
"n.g=length(max(abs(mod(m.rb,v)-.25)-r,0.));"
"n.b=length(max(abs(mod(m.rg,v)-.25)-r,0.));"
"return-min(min(max(max(-n.r,-n.g),-n.b),0.),0.);"
"}"
"vec3 s(vec3 m)"
"{"
"vec3 v=vec3(.005,-.005,0);"
"return normalize(vec3(n(m+v.rgg),n(m+v.grg),n(m+v.ggr)));"
"}"
"float n(vec3 m,vec3 v,float g)"
"{"
"const int r=96;"
"for(int f=0;f<r;f++)"
"{"
"float s=n(m+v*g);"
"g+=s*fade;"
"}"
"return g;"
"}"
"void main()"
"{"
"vec2 r=gl_FragCoord.rg/resolution.rg,f=-1.+2.*r;"
"float g=time*.5;"
"vec3 c=normalize(vec3(f*vec2(1./resolution.g*resolution.r,1.),.85));"
"c=n(m*1.5*sin(g*.25),c);"
"c=s(m*1.5*sin(g*.25),c);"
"c=v(m*cos(g*.25),c);"
"vec3 a=vec3(0.,0.,6.*g*.0625);"
"float i=0.;"
"i=n(a,c,i);"
"vec3 b=a+c*i,d=s(b);"
"c=reflect(c,d);"
"i+=c.r;"
"i=n(a,c,i);"
"if(i>0.)"
"{"
"float e=(d.r*2.8+d.g+d.b)*.25-i*.025;"
"vec3 t=vec3(e*i*.1,e*i*.25+i*.01125,e*.175+i*.0125);"
"if(t.g>1.)"
"t=vec3(1,1,1);"
"gl_FragColor=vec4(smoothstep(.8,.9,e)+t*t,1.);"
"}"
"}";



const char circular_frag[] =  ""
"uniform vec2 resolution;"
"uniform float time,fade;"
"const float v=3.14159;"
"float c=time*.65,f=.125-.25*cos(v*c*.25),r=.125+.25*sin(v*c*.25),g=c*.125;"
"vec3 n(float v,vec3 g)"
"{"
"float r=cos(v),f=sin(v);"
"return g*mat3(1.,0.,0.,0.,r,-f,0.,f,r);"
"}"
"vec3 s(float v,vec3 g)"
"{"
"float r=cos(v),f=sin(v);"
"return g*mat3(r,0.,f,0.,1.,0.,-f,0.,r);"
"}"
"vec3 t(float v,vec3 g)"
"{"
"float f=cos(v),r=sin(v);"
"return g*mat3(f,-r,0.,r,f,0.,0.,0.,1.);"
"}"
"float n(vec3 v)"
"{"
"float r=.25,f=r*.7,g=length(mod(v.rgb,r)-r*.5)-f,e=r*.65,c=length(mod(v.rgb,r)-r*.5)-e;"
"return max(g,-c);"
"}"
"vec3 s(vec3 v)"
"{"
"vec3 r=vec3(.01,1e-05,0.);"
"return normalize(vec3(n(v+r.grr)-n(v-r.grr),n(v+r.rgr)-n(v-r.rgr),n(v+r.rrg)-n(v-r.rrg)));"
"}"
"float n(vec3 v,vec3 r,float g)"
"{"
"const int f=96;"
"for(int c=0;c<f;c++)"
"{"
"float s=n(v+r*g);"
"g+=s*fade;"
"}"
"return g;"
"}"
"void main()"
"{"
"vec2 c=gl_FragCoord.rg/resolution.rg,m=-1.+2.*c;"
"float e=time*.5;"
"vec3 b=normalize(vec3(m*vec2(1./resolution.g*resolution.r,1.),.85));"
"b=n(v*sin(e*.25),b);"
"b=s(v*cos(e*.25),b);"
"b=t(-e*.2,b);"
"vec3 l=vec3(f,r,g);"
"float i=0.;"
"i=n(l,b,i);"
"vec3 o=l+b*i,d=s(o);"
"b=normalize(refract(b,d,.87));"
"b=normalize(refract(b,d,.87));"
"b=reflect(b,d);"
"i+=b.x;"
"i=n(l,b,i);"
"float a=(d.r+d.g+d.b)*.5;"
"vec3 u=vec3(0.,a*i*.125*m.r+i*.1,0.);"
"u*=2.412;"
"gl_FragColor=vec4(u,1.);"
"}";

const char ballmaze1_frag[] = ""
"uniform vec2 resolution;"
"uniform float time,fade;"
"const float m=3.14159;"
"float v=time*.25,r=.125-.25*cos(m*v*.25),b=.125+.25*sin(m*v*.25),g=v*.125;"
"vec2 s(vec2 m,float v)"
"{"
"return vec2(cos(v)*m.r-sin(v)*m.g,sin(v)*m.r+cos(v)*m.g);"
"}"
"vec3 n(float v,vec3 g)"
"{"
"float r=cos(v),b=sin(v);"
"return g*mat3(1.,0.,0.,0.,r,-b,0.,b,r);"
"}"
"vec3 x(float v,vec3 g)"
"{"
"float m=cos(v),b=sin(v);"
"return g*mat3(m,0.,b,0.,1.,0.,-b,0.,m);"
"}"
"vec3 d(float v,vec3 g)"
"{"
"float m=cos(v),b=sin(v);"
"return g*mat3(m,-b,0.,b,m,0.,0.,0.,1.);"
"}"
"float d(vec3 v)"
"{"
"float b=.25,m=b,r=length(mod(v.rgb,b)-b*.5)-m,g=b*.55,f=length(mod(v.rgb,b)-b*.5)-g,s=.055,e=s*.4,a=length(max(abs(mod(v.gb,s)-s*.5)-e,0.)),d=length(max(abs(mod(v.rb,s)-s*.5)-e,0.)),n=length(max(abs(mod(v.rg,s)-s*.5)-e,0.));"
"return max(max(r,-f),max(a,max(d,n)));"
"}"
"vec3 n(vec3 v)"
"{"
"vec3 m=vec3(0.,.001,0.);"
"return normalize(vec3(d(v+m.grr)-d(v-m.grr),d(v+m.rgr)-d(v-m.rgr),d(v+m.rrg)-d(v-m.rrg)));"
"}"
"float d(vec3 v,vec3 m,float r)"
"{"
"const int b=96;"
"for(int g=0;g<b;g++)"
"{"
"float s=d(v+m*r);"
"r+=s*fade;"
"}"
"return r;"
"}"
"void main()"
"{"
"vec2 v=gl_FragCoord.rg/resolution.rg,f=-1.+2.*v;"
"float e=time*.5;"
"vec3 a=normalize(vec3(f*vec2(1./resolution.g*resolution.r,1.),.85));"
"a.gb=s(a.gb,m*sin(e*.25));"
"a.br=s(a.br,m*cos(e*.25));"
"a.rg=s(a.rg,-e*.5);"
"vec3 l=vec3(r,b,g);"
"float c=0.;"
"c=d(l,a,c);"
"vec3 t=l+a*c;"
"c+=t.x;"
"vec3 i=n(t);"
"if(dot(a,i)<-.05)"
"a=normalize(refract(a,i,.77));"
"a=normalize(refract(a,i,1./.82));"
"c=d(l,a,c);"
"float x=(i.r+i.g+i.b)*.5;"
"vec3 u=vec3(0.,x*c*.125*f.r+c*.1,0.);"
"u*=2.412;"
"gl_FragColor=vec4(u,1.);"
"}";

const char ballmaze2_frag[] = ""
"uniform vec2 resolution;"
"uniform float time,fade;"
"const float v=3.14159;"
"float r=time*.25,m=.125-.25*cos(v*r*.25),g=.125+.25*sin(v*r*.25),f=r*.125;"
"vec2 s(vec2 r,float v)"
"{"
"return vec2(cos(v)*r.r-sin(v)*r.g,sin(v)*r.r+cos(v)*r.g);"
"}"
"vec3 n(float v,vec3 r)"
"{"
"float g=cos(v),f=sin(v);"
"return r*mat3(1.,0.,0.,0.,g,-f,0.,f,g);"
"}"
"vec3 x(float v,vec3 r)"
"{"
"float g=cos(v),f=sin(v);"
"return r*mat3(g,0.,f,0.,1.,0.,-f,0.,g);"
"}"
"vec3 d(float v,vec3 r)"
"{"
"float f=cos(v),g=sin(v);"
"return r*mat3(f,-g,0.,g,f,0.,0.,0.,1.);"
"}"
"float d(vec3 v)"
"{"
"float g=.25,f=g,m=length(mod(v.rgb,g)-g*.5)-f,r=g*.55,s=length(mod(v.rgb,g)-g*.5)-r,l=.015,b=l*.42,a=length(max(abs(mod(v.rg,l)-l*.5)-b,0.)),n=length(max(abs(mod(v.rb,l)-l*.5)-b,0.));"
"return max(max(m,-s),max(a,max(a,n)));"
"}"
"vec3 n(vec3 v)"
"{"
"vec3 r=vec3(0.,.0001,0.);"
"return normalize(vec3(d(v+r.grr)-d(v-r.grr),d(v+r.rgr)-d(v-r.rgr),d(v+r.rrg)-d(v-r.rrg)));"
"}"
"float d(vec3 v,vec3 r,float g)"
"{"
"const int f=96;"
"for(int m=0;m<f;m++)"
"{"
"float l=d(v+r*g);"
"g+=l*fade;"
"}"
"return g;"
"}"
"void main()"
"{"
"vec2 r=gl_FragCoord.rg/resolution.rg,l=-1.+2.*r;"
"float a=time*.5;"
"vec3 b=normalize(vec3(l*vec2(1./resolution.g*resolution.r,1.),.85));"
"b.gb=s(b.gb,v*sin(a*.25));"
"b.br=s(b.br,v*cos(a*.25));"
"b.rg=s(b.rg,-a*.5);"
"vec3 c=vec3(m,g,f);"
"float e=0.;"
"e=d(c,b,e);"
"vec3 t=c+b*e;"
"e+=t.x;"
"vec3 i=n(t);"
"b=reflect(b,i);"
"b=normalize(refract(b,i,.82));"
"e=d(c,b,e);"
"float x=(i.r+i.g+i.b)*.5;"
"vec3 u=vec3(0.,x*e*.125*l.r+e*.1,0.);"
"u*=2.412;"
"gl_FragColor=vec4(u,1.);"
"}";

const char ballmaze3_frag[] = ""
"uniform vec2 resolution;"
"uniform float time,fade,sync;"
"const float v=3.14159;"
"float s=time*.25,m=.125-.25*cos(v*s*.25),b=.125+.25*sin(v*s*.25),r=s*.125;"
"vec2 n(vec2 s,float v)"
"{"
"return vec2(cos(v)*s.r-sin(v)*s.g,sin(v)*s.r+cos(v)*s.g);"
"}"
"vec3 x(float v,vec3 s)"
"{"
"float r=cos(v),b=sin(v);"
"return s*mat3(1.,0.,0.,0.,r,-b,0.,b,r);"
"}"
"vec3 e(float v,vec3 s)"
"{"
"float r=cos(v),b=sin(v);"
"return s*mat3(r,0.,b,0.,1.,0.,-b,0.,r);"
"}"
"vec3 t(float v,vec3 s)"
"{"
"float r=cos(v),b=sin(v);"
"return s*mat3(r,-b,0.,b,r,0.,0.,0.,1.);"
"}"
"float e(vec3 v)"
"{"
"float s=.25,b=s,r=length(mod(v.rgb,b)-b*.2)-b,m=s*.55,g=length(mod(v.rgb,b)-b*.5)-m,n=.045,f=n*.43,c=length(max(abs(mod(v.gb,f)-n*sync)-f,0.));"
"return max(max(g,-g),max(g,max(g,c)));"
"}"
"vec3 n(vec3 v)"
"{"
"vec3 s=vec3(.0001,-.001,0.);"
"return normalize(vec3(e(v+s.grr)-e(v-s.grr),e(v+s.rgr)-e(v-s.rgr),e(v+s.rrg)-e(v-s.rrg)));"
"}"
"float e(vec3 v,vec3 s,float r)"
"{"
"const int b=96;"
"for(int f=0;f<b;f++)"
"{"
"float n=e(v+s*r);"
"r+=n*fade;"
"}"
"return r;"
"}"
"void main()"
"{"
"vec2 s=gl_FragCoord.rg/resolution.rg,f=-1.+2.*s;"
"float g=time*.5;"
"vec3 c=normalize(vec3(f*vec2(1./resolution.g*resolution.r,1.),.85));"
"c.gb=n(c.gb,v*sin(g*.25));"
"c.br=n(c.br,v*cos(g*.25));"
"c.rg=n(c.rg,-g*.5);"
"vec3 t=vec3(m,b,r);"
"float i=0.;"
"i=e(t,c,i);"
"vec3 l=t+c*i;"
"i+=l.x;"
"vec3 d=n(l);"
"if(dot(c,d)<-.05)"
"c=normalize(refract(c,d,.77));"
"c=normalize(refract(c,d,1./.82));"
"i=e(t,c,i);"
"float x=(d.r+d.g+d.b)*.5;"
"vec3 a=vec3(0.,x*i*.125*f.r+i*.1,0.);"
"a*=2.412;"
"gl_FragColor=vec4(a,1.);"
"}";




const char vhs_frag[] = ""
"varying vec4 vpos;"
"uniform sampler2D tex;"
"uniform float time;"
"uniform vec2 resolution;"
"uniform float snarehit;"
"uniform float snarehit2;"
"uniform float colordistort;"
"float t(vec2 co)"
"{"
"return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);"
"}"
"float s(vec2 v)"
"{"
"v=mod(v,1000.);"
"vec2 e=fract(v);"
"v-=e;"
"vec2 f=e*e*(3.-2.*e);"
"return mix(mix(t(v+vec2(0,0)),t(v+vec2(1,0)),f.r),mix(t(v+vec2(0,1)),t(v+vec2(1,1)),f.r),f.g);"
"}"
"float n(vec2 v)"
"{"
"float f=t(v*time);"
"return clamp(f,.9,1.2);"
"}"
"float n(float v,float t,float f)"
"{"
"return step(f,sin(time+v*cos(time*t)));"
"}"
"float s(float v,float t,float f)"
"{"
"float r=step(t,v)-step(f,v),e=(v-t)/(f-t)*r;"
"return(1.-e)*r;"
"}"
"float v(vec2 v)"
"{"
"float r=t(v*time*5.);"
"return s(mod(v.g*4.+time/2.+sin(time+sin(time*.63)),1.),.5,.6)*r;"
"}"
"vec2 p(vec2 v)"
"{"
"return vec2(v.r,v.g+sin(time)*.02);"
"}"
"vec2 p(vec2 v,float t,float e)"
"{"
"return vec2(v.r,v.g+t*e);"
"}"
"vec3 d(vec2 v)"
"{"
"vec2 f=v;"
"float r=1./(1.+20.*(f.g-mod(time/4.,1.))*(f.g-mod(time/4.,1.)));"
"if(snarehit==1.)"
//"f.r=f.r+sin(f.g*5.+time)/10.*(1.+cos(time*280.))*r;"
"f.r=f.r+sin(f.g*30.+time)/20.*(1.+cos(time*40.))*r;"
"vec3 e,u;"
"u.r=t(v*time*4.);"
"u.b=t(v*time*3.);"
"u.g=t(v*time*2.);"
"if(snarehit2==1.)"
"{"
"e.r=texture2D(tex,p(f,.025,u.r)).r;"
"e.g=texture2D(tex,p(f,.01,u.g)).g;"
"e.b=texture2D(tex,p(f,.024,u.b)).b;"
"}"
"else"
"{"
"e.rgb=texture2D(tex,f).rgb;"
"}"
"return e;"
"}"
"vec2 d(vec2 v,float f)"
"{"
"return v=(v-.5)*2.,v*=.5,v.r*=1.+pow(abs(v.g)/f,2.),v.g*=1.+pow(abs(v.r)/f,2.),v=v+.5,v;"
"}"
"vec2 f(vec2 v)"
"{"
"float e=clamp(cos(v.g*2.+time),0.,1.),f=clamp(cos(v.g*2.+time+4.)*10.,0.,1.),r=e*f*v.r;"
"v.r-=.05*mix(t(v*time)*r,r,.9);"
"return v;"
"}"
"void main()"
"{"
"vec2 e=gl_TexCoord[0].rg,r=f(e);"
"vec3 g=d(e);"
"float s=3.+.3*sin(time+5.*cos(time*5.)),u=(1.-s*(e.g-.5)*(e.g-.5))*(1.-s*(e.r-.5)*(e.r-.5));"
"if(snarehit2==1.)"
"g+=v(e);"
"if(snarehit2==1.)"
"g+=t(e*time)/4.;"
"float mod_factor = e.x * resolution.x * resolution.x / resolution.x;"
"vec3 dotMaskWeights = mix(vec3(1.0, 0.7, 1.0),vec3(0.7, 1.0, 0.7),floor(mod(mod_factor, 2.0)));"
"g*= dotMaskWeights;"
"g*=u;"
"if(snarehit2==1.)"
"g*=(12.+mod(e.g*30.+time,1.))/13.;"
"float frameLimit = 0.16;"
"float frameShape = 0.44;"
"float frameSharpness = 4.80;"
"float interference = 0.43;"
"const float base_brightness = 0.95;"
"float f = (1.0 - vpos.x *vpos.x) * (1.0 - vpos.y *vpos.y);"
"float frame = clamp(frameSharpness * (pow(f, frameShape) - frameLimit), 0.0, 1.0);"
"g*=frame;"
"gl_FragColor=vec4(g,1.);"
"}";


const char image_distort[] = ""
"uniform float strp_cnt,strp_intens,strp_trnsinst,rgb_distort;"
"uniform vec2 resolution;"
"uniform sampler2D tex;"
"uniform float time;"
"float v(vec2 t)"
"{"
"vec2 r=vec2(time*.0001,time*.0001);"
"return fract(sin(dot(t.rg,vec2(12.9898,78.233)+r))*43758.5);"
"}"
"vec4 v(vec2 t,sampler2D r)"
"{"
"float f=0.,s=floor(t.g*max(1.,strp_cnt))/max(1.,strp_cnt),m=v(vec2(0.,-s)),e=v(vec2(0.,s))*strp_trnsinst;"
"vec2 g=vec2(mod(t.r+e*.25,1.),t.g+min(1.,1.+mod(t.r+e*.25,1.))-1.),a=vec2(0.,rgb_distort),x=vec2(0.,-rgb_distort),b=vec2(rgb_distort,0.);"
"vec4 c=vec4(texture2D(r,g+a).r,texture2D(r,g+x).g,texture2D(r,g+b).b,texture2D(r,g).a);"
"if(m-(1.-strp_intens)>0.)"
"{"
"float i=v(vec2(s,m));"
"if(i<.33)"
"c.r=1.;"
"else"
" if(i<.66)"
"c.g=1.;"
"else"
" c.b=1.;"
"}"
"vec4 i=c;"
"return i;"
"}"
"void main()"
"{"
"vec2 r=gl_FragCoord.rg/resolution.rg;"
"vec4 t=v(r,tex);"
"gl_FragColor=t;"
"}";